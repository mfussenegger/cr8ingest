---
jobs:
  - job: LinuxTest
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
      - script: curl -sSL https://get.haskellstack.org/ | sh
        displayName: Install stack

      - script: sudo apt-get install libpq-dev
        displayName: Install postgres libs

      - script: stack build --flag cr8ingest:-static
        displayName: Build

      - script: stack test
        displayName: Run tests

      - script: |
          python -m pip install cr8
          cd tests && python -m unittest -v
        displayName: Run doctests

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'cr8ingest-linux-x86_64'
          targetPath: '.stack-work/install/x86_64-linux/lts-13.14/8.6.4/bin/'

  - job: MacOSTest
    pool:
      vmImage: 'macOS-10.13'
    steps:
      - script: curl -sSL https://get.haskellstack.org/ | sh
        displayName: Install stack

      - script: brew install libpq
        displayName: Install postgres libs

      - script: |
          export PATH="/usr/local/opt/libpq/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/libpq/lib"
          export CPPFLAGS="-I/usr/local/opt/libpq/include"
          stack build --flag cr8ingest:-static
        displayName: Build

      - script: stack test
        displayName: Run tests

      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'cr8ingest-osx-x86_64'
          targetPath: '.stack-work/install/x86_64-osx/lts-13.14/8.6.4/bin/'

  - job: Release
    dependsOn:
      - LinuxTest
      - MacOSTest

    steps:
      - script: mkdir -p $(System.DefaultWorkingDirectory)/artifacts/

      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'cr8ingest-osx-x86_64'
          targetPath: $(System.DefaultWorkingDirectory)/artifacts/
      - script: mv $(System.DefaultWorkingDirectory)/artifacts/cr8ingest{,-osx-x86_64}

      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: 'cr8ingest-linux-x86_64'
          targetPath: $(System.DefaultWorkingDirectory)/artifacts/
      - script: mv $(System.DefaultWorkingDirectory)/artifacts/cr8ingest{,-linux-x86_64}

      - task: GithubRelease@0
        inputs:
          gitHubConnection: 'GitHub connection'
          repositoryName: mfussenegger/cr8ingest
          target: '$(build.sourceVersion)'
          assets: $(System.DefaultWorkingDirectory)/artifacts/*
          tagSource: 'auto'
          isDraft: true
